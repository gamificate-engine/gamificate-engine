"""new PostgresDB

Revision ID: 73386a8fe4e2
Revises: 
Create Date: 2020-04-20 17:03:07.792684

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '73386a8fe4e2'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('admin',
    sa.Column('id_admin', sa.Integer(), nullable=False),
    sa.Column('first_name', sa.String(length=32), nullable=True),
    sa.Column('last_name', sa.String(length=32), nullable=True),
    sa.Column('email', sa.String(length=128), nullable=True),
    sa.Column('password', sa.String(length=128), nullable=True),
    sa.Column('premium', sa.Boolean(), nullable=True),
    sa.PrimaryKeyConstraint('id_admin'),
    schema='gamificate'
    )
    op.create_index(op.f('ix_gamificate_admin_email'), 'admin', ['email'], unique=True, schema='gamificate')
    op.create_table('realm',
    sa.Column('id_realm', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=32), nullable=True),
    sa.Column('description', sa.String(length=256), nullable=True),
    sa.Column('admin_id', sa.Integer(), nullable=True),
    sa.Column('api_key', sa.String(length=128), nullable=True),
    sa.Column('a', sa.Float(), nullable=True),
    sa.Column('b', sa.Float(), nullable=True),
    sa.ForeignKeyConstraint(['admin_id'], ['gamificate.admin.id_admin'], ),
    sa.PrimaryKeyConstraint('id_realm'),
    sa.UniqueConstraint('api_key'),
    sa.UniqueConstraint('description'),
    sa.UniqueConstraint('name'),
    schema='gamificate'
    )
    op.create_table('reward',
    sa.Column('id_reward', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=True),
    sa.Column('desc', sa.String(length=255), nullable=True),
    sa.Column('id_realm', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['id_realm'], ['gamificate.realm.id_realm'], ),
    sa.PrimaryKeyConstraint('id_reward'),
    schema='gamificate'
    )
    op.create_table('user',
    sa.Column('id_user', sa.Integer(), nullable=False),
    sa.Column('username', sa.String(length=50), nullable=True),
    sa.Column('email', sa.String(length=254), nullable=True),
    sa.Column('total_xp', sa.Integer(), nullable=True),
    sa.Column('total_badges', sa.Integer(), nullable=True),
    sa.Column('active', sa.Boolean(), nullable=True),
    sa.Column('level', sa.Integer(), nullable=True),
    sa.Column('id_realm', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['id_realm'], ['gamificate.realm.id_realm'], ),
    sa.PrimaryKeyConstraint('id_user'),
    sa.UniqueConstraint('email'),
    sa.UniqueConstraint('username'),
    schema='gamificate'
    )
    op.create_table('badge',
    sa.Column('id_badge', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=32), nullable=True),
    sa.Column('xp', sa.Integer(), nullable=True),
    sa.Column('required', sa.Integer(), nullable=True),
    sa.Column('id_realm', sa.Integer(), nullable=True),
    sa.Column('id_reward', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['id_realm'], ['gamificate.realm.id_realm'], ),
    sa.ForeignKeyConstraint(['id_reward'], ['gamificate.reward.id_reward'], ),
    sa.PrimaryKeyConstraint('id_badge'),
    schema='gamificate'
    )
    op.create_table('standings',
    sa.Column('realm_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('total_xp', sa.Integer(), nullable=True),
    sa.Column('total_badges', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['realm_id'], ['gamificate.realm.id_realm'], ),
    sa.ForeignKeyConstraint(['user_id'], ['gamificate.user.id_user'], ),
    sa.PrimaryKeyConstraint('realm_id', 'user_id'),
    schema='gamificate'
    )
    op.create_table('user_reward',
    sa.Column('id_user', sa.Integer(), nullable=False),
    sa.Column('id_reward', sa.Integer(), nullable=False),
    sa.Column('redeem_date', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['id_reward'], ['gamificate.reward.id_reward'], ),
    sa.ForeignKeyConstraint(['id_user'], ['gamificate.user.id_user'], ),
    sa.PrimaryKeyConstraint('id_user', 'id_reward'),
    schema='gamificate'
    )
    op.create_table('user_badge',
    sa.Column('id_user', sa.Integer(), nullable=False),
    sa.Column('id_badge', sa.Integer(), nullable=False),
    sa.Column('progress', sa.Integer(), nullable=True),
    sa.Column('finished', sa.Boolean(), nullable=True),
    sa.Column('finished_date', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['id_badge'], ['gamificate.badge.id_badge'], ),
    sa.ForeignKeyConstraint(['id_user'], ['gamificate.user.id_user'], ),
    sa.PrimaryKeyConstraint('id_user', 'id_badge'),
    schema='gamificate'
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('user_badge', schema='gamificate')
    op.drop_table('user_reward', schema='gamificate')
    op.drop_table('standings', schema='gamificate')
    op.drop_table('badge', schema='gamificate')
    op.drop_table('user', schema='gamificate')
    op.drop_table('reward', schema='gamificate')
    op.drop_table('realm', schema='gamificate')
    op.drop_index(op.f('ix_gamificate_admin_email'), table_name='admin', schema='gamificate')
    op.drop_table('admin', schema='gamificate')
    # ### end Alembic commands ###
